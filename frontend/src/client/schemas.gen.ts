// This file is auto-generated by @hey-api/openapi-ts

export const HTTPValidationErrorSchema = {
	properties: {
		detail: {
			items: {
				$ref: "#/components/schemas/ValidationError",
			},
			type: "array",
			title: "Detail",
		},
	},
	type: "object",
	title: "HTTPValidationError",
} as const;

export const LocationDataSchema = {
	properties: {
		nome: {
			type: "string",
			title: "Nome",
		},
		latitude: {
			type: "number",
			title: "Latitude",
		},
		longitude: {
			type: "number",
			title: "Longitude",
		},
	},
	type: "object",
	required: ["nome", "latitude", "longitude"],
	title: "LocationData",
} as const;

export const MetereologicoDataSchema = {
	properties: {
		data: {
			type: "string",
			format: "date-time",
			title: "Data",
		},
		pressao_atmosferica: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Pressao Atmosferica",
		},
		temperatura: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Temperatura",
		},
		umidade_ar: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Umidade Ar",
		},
		precipitacao: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Precipitacao",
		},
		velocidade_vento: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Velocidade Vento",
		},
		direcao_vento: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Direcao Vento",
		},
		bateria: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Bateria",
		},
	},
	type: "object",
	required: [
		"data",
		"pressao_atmosferica",
		"temperatura",
		"umidade_ar",
		"precipitacao",
		"velocidade_vento",
		"direcao_vento",
		"bateria",
	],
	title: "MetereologicoData",
} as const;

export const SensorDataDBSchema = {
	properties: {
		data_leitura: {
			type: "string",
			format: "date-time",
			title: "Data Leitura",
		},
		mac: {
			type: "string",
			title: "Mac",
		},
		valor_leitura: {
			type: "number",
			title: "Valor Leitura",
		},
	},
	type: "object",
	required: ["data_leitura", "mac", "valor_leitura"],
	title: "SensorDataDB",
	description: "Sensor in the db.",
} as const;

export const SensorLastUpdateSchema = {
	properties: {
		mac: {
			type: "string",
			title: "Mac",
		},
		data: {
			type: "string",
			format: "date-time",
			title: "Data",
		},
	},
	type: "object",
	required: ["mac", "data"],
	title: "SensorLastUpdate",
	description: "Sensor in the db.",
} as const;

export const ValidationErrorSchema = {
	properties: {
		loc: {
			items: {
				anyOf: [
					{
						type: "string",
					},
					{
						type: "integer",
					},
				],
			},
			type: "array",
			title: "Location",
		},
		msg: {
			type: "string",
			title: "Message",
		},
		type: {
			type: "string",
			title: "Error Type",
		},
	},
	type: "object",
	required: ["loc", "msg", "type"],
	title: "ValidationError",
} as const;
