// This file is auto-generated by @hey-api/openapi-ts

export type HTTPValidationError = {
	detail?: Array<ValidationError>;
};

export type LocationData = {
	nome: string;
	latitude: number;
	longitude: number;
};

export type MetereologicoData = {
	data: Date;
	pressao_atmosferica: number | null;
	temperatura: number | null;
	umidade_ar: number | null;
	precipitacao: number | null;
	velocidade_vento: number | null;
	direcao_vento: number | null;
	bateria: number | null;
};

/**
 * Sensor in the db.
 */
export type SensorDataDB = {
	data_leitura: Date;
	mac: string;
	valor_leitura: number;
};

/**
 * Sensor in the db.
 */
export type SensorLastUpdate = {
	mac: string;
	data: Date;
};

export type ValidationError = {
	loc: Array<string | number>;
	msg: string;
	type: string;
};

export type GetDataApiLinigrafosGetData = {
	query?: {
		end?: Date | null;
		start?: Date | null;
	};
};

export type GetDataApiLinigrafosGetResponse = Array<SensorDataDB>;

export type GetDataApiLinigrafosGetError = HTTPValidationError;

export type UpdateDataApiLinigrafosUpdateGetResponse = unknown;

export type UpdateDataApiLinigrafosUpdateGetError = unknown;

export type SensorsLastupdateApiLinigrafosLastupdateGetResponse =
	Array<SensorLastUpdate>;

export type SensorsLastupdateApiLinigrafosLastupdateGetError = unknown;

export type GetDataApiMetereologicoGetData = {
	query?: {
		end?: Date | null;
		start?: Date | null;
	};
};

export type GetDataApiMetereologicoGetResponse = Array<MetereologicoData>;

export type GetDataApiMetereologicoGetError = HTTPValidationError;

export type UpdateDataApiMetereologicoUpdateGetResponse = unknown;

export type UpdateDataApiMetereologicoUpdateGetError = unknown;

export type CanLoginApiMetereologicoCanLoginGetResponse = unknown;

export type CanLoginApiMetereologicoCanLoginGetError = unknown;

export type GetLocationsApiLocationGetResponse = Array<LocationData>;

export type GetLocationsApiLocationGetError = unknown;

export type HealtyApiHealtyGetResponse = unknown;

export type HealtyApiHealtyGetError = unknown;

export type GetDataApiLinigrafosGetResponseTransformer = (
	data: any,
) => Promise<GetDataApiLinigrafosGetResponse>;

export type SensorDataDBModelResponseTransformer = (data: any) => SensorDataDB;

export const SensorDataDBModelResponseTransformer: SensorDataDBModelResponseTransformer =
	(data) => {
		if (data?.data_leitura) {
			data.data_leitura = new Date(data.data_leitura);
		}
		return data;
	};

export const GetDataApiLinigrafosGetResponseTransformer: GetDataApiLinigrafosGetResponseTransformer =
	async (data) => {
		if (Array.isArray(data)) {
			data.forEach(SensorDataDBModelResponseTransformer);
		}
		return data;
	};

export type SensorsLastupdateApiLinigrafosLastupdateGetResponseTransformer = (
	data: any,
) => Promise<SensorsLastupdateApiLinigrafosLastupdateGetResponse>;

export type SensorLastUpdateModelResponseTransformer = (
	data: any,
) => SensorLastUpdate;

export const SensorLastUpdateModelResponseTransformer: SensorLastUpdateModelResponseTransformer =
	(data) => {
		if (data?.data) {
			data.data = new Date(data.data);
		}
		return data;
	};

export const SensorsLastupdateApiLinigrafosLastupdateGetResponseTransformer: SensorsLastupdateApiLinigrafosLastupdateGetResponseTransformer =
	async (data) => {
		if (Array.isArray(data)) {
			data.forEach(SensorLastUpdateModelResponseTransformer);
		}
		return data;
	};

export type GetDataApiMetereologicoGetResponseTransformer = (
	data: any,
) => Promise<GetDataApiMetereologicoGetResponse>;

export type MetereologicoDataModelResponseTransformer = (
	data: any,
) => MetereologicoData;

export const MetereologicoDataModelResponseTransformer: MetereologicoDataModelResponseTransformer =
	(data) => {
		if (data?.data) {
			data.data = new Date(data.data);
		}
		return data;
	};

export const GetDataApiMetereologicoGetResponseTransformer: GetDataApiMetereologicoGetResponseTransformer =
	async (data) => {
		if (Array.isArray(data)) {
			data.forEach(MetereologicoDataModelResponseTransformer);
		}
		return data;
	};
