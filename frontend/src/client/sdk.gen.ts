// This file is auto-generated by @hey-api/openapi-ts

import {
	createClient,
	createConfig,
	type OptionsLegacyParser,
} from "@hey-api/client-fetch";
import {
	type GetDataApiLinigrafosGetData,
	type GetDataApiLinigrafosGetError,
	type GetDataApiLinigrafosGetResponse,
	type UpdateDataApiLinigrafosUpdateGetError,
	type UpdateDataApiLinigrafosUpdateGetResponse,
	type SensorsLastupdateApiLinigrafosLastupdateGetError,
	type SensorsLastupdateApiLinigrafosLastupdateGetResponse,
	type GetDataApiMetereologicoGetData,
	type GetDataApiMetereologicoGetError,
	type GetDataApiMetereologicoGetResponse,
	type UpdateDataApiMetereologicoUpdateGetError,
	type UpdateDataApiMetereologicoUpdateGetResponse,
	type CanLoginApiMetereologicoCanLoginGetError,
	type CanLoginApiMetereologicoCanLoginGetResponse,
	type GetLocationsApiLocationGetError,
	type GetLocationsApiLocationGetResponse,
	type HealtyApiHealtyGetError,
	type HealtyApiHealtyGetResponse,
	GetDataApiLinigrafosGetResponseTransformer,
	SensorsLastupdateApiLinigrafosLastupdateGetResponseTransformer,
	GetDataApiMetereologicoGetResponseTransformer,
} from "./types.gen";

export const client = createClient(createConfig());

/**
 * Get Data
 */
export const getDataApiLinigrafosGet = <ThrowOnError extends boolean = false>(
	options?: OptionsLegacyParser<GetDataApiLinigrafosGetData, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		GetDataApiLinigrafosGetResponse,
		GetDataApiLinigrafosGetError,
		ThrowOnError
	>({
		...options,
		url: "/api/linigrafos/",
		responseTransformer: GetDataApiLinigrafosGetResponseTransformer,
	});
};

/**
 * Update Data
 */
export const updateDataApiLinigrafosUpdateGet = <
	ThrowOnError extends boolean = false,
>(
	options?: OptionsLegacyParser<unknown, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		UpdateDataApiLinigrafosUpdateGetResponse,
		UpdateDataApiLinigrafosUpdateGetError,
		ThrowOnError
	>({
		...options,
		url: "/api/linigrafos/update",
	});
};

/**
 * Sensors Lastupdate
 */
export const sensorsLastupdateApiLinigrafosLastupdateGet = <
	ThrowOnError extends boolean = false,
>(
	options?: OptionsLegacyParser<unknown, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		SensorsLastupdateApiLinigrafosLastupdateGetResponse,
		SensorsLastupdateApiLinigrafosLastupdateGetError,
		ThrowOnError
	>({
		...options,
		url: "/api/linigrafos/lastupdate",
		responseTransformer:
			SensorsLastupdateApiLinigrafosLastupdateGetResponseTransformer,
	});
};

/**
 * Get Data
 */
export const getDataApiMetereologicoGet = <
	ThrowOnError extends boolean = false,
>(
	options?: OptionsLegacyParser<GetDataApiMetereologicoGetData, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		GetDataApiMetereologicoGetResponse,
		GetDataApiMetereologicoGetError,
		ThrowOnError
	>({
		...options,
		url: "/api/metereologico/",
		responseTransformer: GetDataApiMetereologicoGetResponseTransformer,
	});
};

/**
 * Update Data
 */
export const updateDataApiMetereologicoUpdateGet = <
	ThrowOnError extends boolean = false,
>(
	options?: OptionsLegacyParser<unknown, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		UpdateDataApiMetereologicoUpdateGetResponse,
		UpdateDataApiMetereologicoUpdateGetError,
		ThrowOnError
	>({
		...options,
		url: "/api/metereologico/update",
	});
};

/**
 * Can Login
 */
export const canLoginApiMetereologicoCanLoginGet = <
	ThrowOnError extends boolean = false,
>(
	options?: OptionsLegacyParser<unknown, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		CanLoginApiMetereologicoCanLoginGetResponse,
		CanLoginApiMetereologicoCanLoginGetError,
		ThrowOnError
	>({
		...options,
		url: "/api/metereologico/can_login",
	});
};

/**
 * Get Locations
 */
export const getLocationsApiLocationGet = <
	ThrowOnError extends boolean = false,
>(
	options?: OptionsLegacyParser<unknown, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		GetLocationsApiLocationGetResponse,
		GetLocationsApiLocationGetError,
		ThrowOnError
	>({
		...options,
		url: "/api/location/",
	});
};

/**
 * Healty
 */
export const healtyApiHealtyGet = <ThrowOnError extends boolean = false>(
	options?: OptionsLegacyParser<unknown, ThrowOnError>,
) => {
	return (options?.client ?? client).get<
		HealtyApiHealtyGetResponse,
		HealtyApiHealtyGetError,
		ThrowOnError
	>({
		...options,
		url: "/api/healty",
	});
};
